1	データ移行処理	下記「No.1 データ移行処理」参照			新券分データ取得																																																																																																																								
																																																																																																																													
No.1 データ移行処理																																																																																																																													
対象テーブル　または　ファイル																																																																																																																													
dom_ticketing_tmp																																																																																																																													
																																																																																																																													
内容																																																																																																																													
No	カラム名	取得元	取得元カラム名	編集内容		備考																																																																																																																							
1	発券年月日	発券・券片	発券日(年月日)																																																																																																																										
2	航空券番号	発券・券片	航空券番号(発券)			券単位																																																																																																																							
3	券区分	発券・ＰＡＸ	新券・交換・払戻区分			"登録時の値
1：新券発行、2：払戻し、3：交換新券、4：交換払戻し"																																																																																																																							
4	処理日付	-	-	TRUNC(SYSDATE)																																																																																																																									
5	搭乗予定日	発券・券片	搭乗予定日年月日(発券)																																																																																																																										
6	キャリア	発券・券片	予定搭乗キャリア(発券)																																																																																																																										
7	販売便名	発券・券片	予定搭乗便名(発券)	LPAD(TKT.予定搭乗便名(発券), 4, '0')																																																																																																																									
8	出発空港	発券・券片	予定出発空港(発券)	DECODE(予定出発空港(発券), 'HND','TYO', 'ITM','OSA', 'CTS','SPK', 予定出発空港(発券))																																																																																																																									
9	到着空港	発券・券片	予定到着空港(発券)	DECODE(予定到着空港(発券), 'HND','TYO', 'ITM','OSA', 'CTS','SPK', 予定到着空港(発券))																																																																																																																									
10	路線	区間諸元	路線																																																																																																																										
11	路線コード	区間諸元	路線コード																																																																																																																										
12	方面１	区間諸元	方面１																																																																																																																										
13	方面２	区間諸元	方面２																																																																																																																										
14	主管名	区間諸元	主管名																																																																																																																										
15	主管コード	区間諸元	主管コード																																																																																																																										
16	副主管名	区間諸元	副主管名																																																																																																																										
17	副主管コード	区間諸元	副主管コード																																																																																																																										
18	幹ロ区分	区間諸元	幹ロ区分																																																																																																																										
19	コンパートメントクラス	発券・券片	コンパートメントクラス(発券)																																																																																																																										
20	ブッキングクラス	運賃客体諸元 M02_02	ブッキングクラス(発券)																																																																																																																										
21	ブッキングクラスコード	運賃客体諸元 M02_02	ブッキングクラスコード																																																																																																																										
22	客体	wrk.mas_kyaku_amateras_view	客体																																																																																																																										
23	客体詳細	wrk.mas_kyaku_amateras_view	客体詳細																																																																																																																										
24	客体区分	運賃客体諸元 M02_02	客体区分																																																																																																																										
25	客体区分コード	運賃客体諸元 M02_02	客体区分コード																																																																																																																										
26	発券旬	発券・券片	発券日(年月日)	"CASE
    WHEN TO_CHAR(発券日(年月日), 'DD') BETWEEN '01' AND '10'
        THEN TO_CHAR(発券日(年月日), 'YYYYMM') || '9' || '1'
    WHENTO_CHAR(発券日(年月日), 'DD') BETWEEN '11' AND '20'
        THEN TO_CHAR(発券日(年月日), 'YYYYMM') || '9' || '2'
    WHEN TO_CHAR(発券日(年月日), 'DD') BETWEEN '21' AND '31'
        THEN TO_CHAR(発券日(年月日), 'YYYYMM') || '9' || '3'
   ELSE ''
END"																																																																																																																									
27	発券週	発券・券片	発券日(年月日)	"TO_CHAR(発券日(年月日), 'YYYYMM') || '8' || 
DATEDIFF(week, TO_DATE(TO_CHAR(発券日(年月日), 'YYYYMM') || '01', 'YYYYMMDD'), 発券日(年月日)) + 1"																																																																																																																									
28	発券曜日	発券・券片	発券日(年月日)	"CASE
   WHEN date_part(dow, 発券日(年月日)) = 1 THEN '1'
   WHEN date_part(dow, 発券日(年月日)) = 2 THEN '2'
   WHEN date_part(dow, 発券日(年月日)) = 3 THEN '3'
   WHEN date_part(dow, 発券日(年月日)) = 4 THEN '4'
   WHEN date_part(dow, 発券日(年月日)) = 5 THEN '5'
   WHEN date_part(dow, 発券日(年月日)) = 6 THEN '6'
   WHEN date_part(dow, 発券日(年月日)) = 0 THEN '7'
END"																																																																																																																									
29	精算店舗コード	発券・ＰＡＸ	"精算店舗コード
代行入力精算店舗コード
端末識別"	"CASE 
    WHEN PAX.端末識別 = '8'
        THEN
           -- 会社コード
           CASE
               WHEN LENGTH(PAX.精算店舗コード) < 9
                   THEN SUBSTRING(LPAD(PAX.精算店舗コード, 9, '0'), 1, 4)
                   ELSE SUBSTRING(PAX.精算店舗コード, 1, 4)
           END
           ||
           -- 代行入力精算コード(1～4桁目）
           CASE
               WHEN LENGTH(PAX.代行入力精算店舗コード) < 4
                   THEN SUBSTRING(LPAD(PAX.代行入力精算店舗コード, 4, '0'), 1, 4)
                   ELSE SUBSTRING(PAX.代行入力精算店舗コード, 1, 4)
           END
           ||
           -- チェックデジット
           (
                CASE
                   WHEN LENGTH(PAX.精算店舗コード) < 9
                       THEN SUBSTRING(LPAD(PAX.精算店舗コード, 9, '0'), 1, 4)
                        ELSE SUBSTRING(PAX.精算店舗コード, 1, 4)
                END
                ||
                CASE
                    WHEN LENGTH(PAX.代行入力精算店舗コード) < 4
                        THEN SUBSTRING(LPAD(PAX.代行入力精算店舗コード, 4, '0'), 1, 4)
                        ELSE SUBSTRING(PAX.代行入力精算店舗コード, 1, 4)
                END
           ) % 7
        ELSE PAX.精算店舗コード
END"		"＜端末識別が代接ＡＴＢ(=8)の場合＞
　会社コード（精算店舗コードの上４桁）と代行入力精算店舗コードの１～４桁目を組合せ、チェックデジットを付加する。

　（TKT_PAXに格納されている端末識別が代接ＡＴＢのデータの代行入力精算店舗コードは4桁であり、
上位桁が'0'の場合には、0無しの左詰めとなっているため、処理の際に上位桁に'0'を補完し、4桁とした上で処理を実施する）
"																																																																																																																							
30	変換前精算店舗コード	発券・ＰＡＸ	精算店舗コード	LPAD(PAX.精算店舗コード, 4, '0')																																																																																																																									
31	代行入力精算店舗コード	発券・ＰＡＸ	代行入力精算店舗コード	LPAD(PAX.代行入力精算店舗コード, 4, '0')																																																																																																																									
32	端末識別	発券・ＰＡＸ	端末識別																																																																																																																										
33	当年フラグ	(固定値)	-	固定値 1																																																																																																																									
34	前年同日フラグ	(固定値)	-	固定値 0																																																																																																																									
35	前年同曜日フラグ	(固定値)	-	固定値 0																																																																																																																									
36	発券旅客数	発券・券片	"団体識別(発券)
運賃種別別人数1
運賃種別別人数2
運賃種別別人数3
運賃種別別人数4
運賃種別別人数5"	"DECODE(団体識別(発券), '1',
  運賃種別別人数1 + 運賃種別別人数2 + 運賃種別別人数3 + 運賃種別別人数4 + 運賃種別別人数5,
  1)"																																																																																																																									
37	発券販売額	発券・券片	"税率
税込区間運賃
税込区間SS料金
税込区間JET料金"	"    (税込区間運賃 + 税込区間SS料金 + 税込区間JET料金) 
    - 
    TRUNC(
        (税込区間運賃 + 税込区間SS料金 + 税込区間JET料金) * 税率 / (100 + 税率)
        , 0
    )"		"税込み金額と税率から純販売額を算出
(税金は小数点以下切り捨て)
＊able側の計算方法と同一"																																																																																																																							
38	発券販売額端数	(固定値)	-	固定値 0																																																																																																																									
39	発券旅客数(前年同日)	(固定値)	-	固定値 0																																																																																																																									
40	発券販売額(前年同日)	(固定値)	-	固定値 0																																																																																																																									
41	発券販売額端数(前年同日)	(固定値)	-	固定値 0																																																																																																																									
42	発券旅客数(前年同曜日)	(固定値)	-	固定値 0																																																																																																																									
43	発券販売額(前年同曜日)	(固定値)	-	固定値 0																																																																																																																									
44	発券販売額端数(前年同曜日)	(固定値)	-	固定値 0																																																																																																																									
																																																																																																																													
結合条件																																																																																																																													
No	結合元テーブル名	結合先テーブル名	結合方法	内容		備考																																																																																																																							
1	発券・券片 TKT	発券・ＰＡＸ PAX	内部結合(INNER JOIN)	PAX.発券日(年月日) = TKT.発券日(年月日)																																																																																																																									
2				PAX.代表券番 = TKT.代表券番																																																																																																																									
3				PAX.発券日(年月日) BETWEEN バッチ引数：処理対象開始日 AND バッチ引数：処理対象終了日																																																																																																																									
4	発券・券片 TKT	区間諸元  M	外部結合（LEFT JOIN）	"CASE TKT.予定搭乗キャリア(発券)
           WHEN 'HD' THEN 'ADO'
           WHEN '6J' THEN 'SNA'
           WHEN 'MQ' THEN 'SFJ'
           WHEN 'EL' THEN 'ANK'
           ELSE 'ANA'
       END
   ELSE 'ANA'
 END = M.キャリア"																																																																																																																									
5				"(decode(TKT.予定出発空港(発券),'HND','TYO','ITM','OSA','CTS','SPK',TKT.予定出発空港(発券)) || 
decode(TKT.予定到着空港(発券),'HND','TYO','ITM','OSA','CTS','SPK',TKT.予定到着空港(発券))) = M.区間"																																																																																																																									
6				M.有効無効区分 <> 'D'																																																																																																																									
7	発券・券片 TKT	運賃種別諸元 US_02	外部結合（LEFT JOIN）	TKT.運賃種別コード1(発券) = US_02.運賃種別																																																																																																																									
8	運賃種別諸元 US_02	運賃客体諸元 M02_01	外部結合（LEFT JOIN）	US_02.GENIE運賃 = M02_01.GENIE運賃																																																																																																																									
9	発券・券片 TKT			TKT.コンパートメントクラス(発券) = M02_01.コンパートメントクラス																																																																																																																									
10				TKT.ブッキングクラス(発券) = M02_01.ブッキングクラス																																																																																																																									
11				TKT.発券日(年月日) BETWEEN M02_01.発券開始日 AND M02_01.発券終了日																																																																																																																									
12	運賃客体諸元 M02_01	運賃客体諸元 M02_02	外部結合（LEFT JOIN）	COALESCE(M02_01.GENIE運賃, 'ETC') = M02_02.GENIE運賃																																																																																																																									
13	発券・券片 TKT			TKT.コンパートメントクラス(発券) = M02_02.コンパートメントクラス																																																																																																																									
14				"CASE
   WHEN M02_01.GENIE運賃 IS NULL THEN TKT.コンパートメントクラス(発券)
   ELSE M02_01.ブッキングクラス
 END
 = M02_02.ブッキングクラス"																																																																																																																									
15				TKT.発券日(年月日) BETWEEN M02_02.発券開始日 AND M02_02.発券終了日																																																																																																																									
16	運賃客体諸元 UK	wrk.mas_kyaku_amateras_view KK	外部結合(LEFT JOIN)	UK.コンパートメントクラス = KK.コンパートメントクラス																																																																																																																									
17				UK.ブッキングクラス ＝ KK.ブッキングクラス																																																																																																																									
18				UK.客体区分 ＝ KK.客体区分																																																																																																																									
19				TKT.発券日(年月日) BETWEEN KK.発券開始日 AND KK.発券終了日																																																																																																																									
																																																																																																																													
検索条件																																																																																																																													
No	テーブル名	カラム名	内容			備考																																																																																																																							
1	発券・ＰＡＸ	新券・交換・払戻区分	新券・交換・払戻区分 IN ('1','3')																																																																																																																										
2		グループ外他社発券区分	NVL(グループ外他社発券区分,'Z') <> '1'																																																																																																																										
3		料金券出力区分	料金券出力区分 NOT IN ('6','7','8','9')																																																																																																																										
4		VOID識別	NVL(VOID識別,'0')<>'1'																																																																																																																										
5	発券・券片	運賃計算キャリア	運賃計算キャリア IN ('01','02')																																																																																																																										
6		第２運航キャリア	NVL(第２運航キャリア,'ZZ') <> 'OC'																																																																																																																										
7		ブッキングクラス(発券)	ブッキングクラス(発券) IS NOT NULL																																																																																																																										
8		VOID識別	NVL(VOID識別,'0') <> '1'																																																																																																																										
9		-	"NOT EXISTS (
                  SELECT *
                  FROM 便対象外管理テーブル NE
                  WHERE 予定搭乗便名(発券)  = NE.営業便
                    AND 予定搭乗キャリア(発券) = NE.キャリア１
                    AND 搭乗予定日年月日(発券) BETWEEN NE.適用開始日付 AND NE.適用終了日付
          )"																																																																																																																										
																																																																																																																													
